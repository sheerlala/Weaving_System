<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <!-- enable use-expressions -->
	<http auto-config="true" use-expressions="true" >
	     <intercept-url pattern="/designer*" access="hasAnyRole('ROLE_ADMIN', 'ROLE_VIP', 'ROLE_COMMON')" />
		<intercept-url pattern="/admin/**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_VIP', 'ROLE_VIP')" /><!--el表达式--> <!--管理员权限-->
		<intercept-url pattern="/job/**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_VIP', 'ROLE_COMMON')" />
		<intercept-url pattern="/scheme/**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_VIP', 'ROLE_COMMON')" />
		<intercept-url pattern="/userinfo/**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_VIP', 'ROLE_COMMON')" />
		<intercept-url pattern="/UserUpdateServ*" access="hasAnyRole('ROLE_ADMIN', 'ROLE_VIP', 'ROLE_COMMON')" />
		<intercept-url pattern="/demo/**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_VIP', 'ROLE_COMMON')" />

		

		<!-- access denied page -->
		<access-denied-handler error-page="/403" />
		<form-login
			login-page="/"
			default-target-url="/weavingsystem.jsp"
			authentication-failure-url="/login?error"
			username-parameter="username"
			password-parameter="password" />

		<logout invalidate-session="true" logout-success-url="/index.jsp"  delete-cookies="JSESSIONID"  />
		<!--logout invalid-session="true"/-->
		<session-management invalid-session-url="/index.jsp?expired=true">
		<concurrency-control max-sessions="1" error-if-maximum-exceeded="false"  expired-url="/index.jsp"/>
		</session-management>
		<!-- enable csrf protection -->
	</http>
	
	<!-- Select users and user_roles from database -->
    <!--jdbc-user-service定义是不支持用户组权限的，所以使用jdbc-user-service时用户组相关表也是可以不定义的-->
	<authentication-manager>
		<authentication-provider>
            <password-encoder hash="md5">
                <!--<salt-source user-property="username"/>-->
            </password-encoder>

			<!--<jdbc-user-service data-source-ref="dataSource"-->
				<!--users-by-username-query=-->
					<!--"select username,password, enabled from users where username=?"-->
				<!--authorities-by-username-query=-->
					<!--"select username, role from user_roles where username =?  " />-->
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query=
                                       "SELECT username,password,enabled FROM user WHERE username=?"
                               authorities-by-username-query=
                                       "SELECT u.username,r.name FROM user u
                                       JOIN user_role ur ON u.id = ur.user_id
                                       JOIN role r ON r.id = ur.role_id
                                       WHERE username=?"/><!--内联-->
		</authentication-provider>
	</authentication-manager>

</beans:beans>